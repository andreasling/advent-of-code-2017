notes - advent of code 2017 - 2017-12-09.txt

var aoc_2017_1 = () => {

  var f = input => input.split("").map(s => parseInt(s, 10)).filter((e, i, a) => e == a[(i + 1) % a.length]).reduce((a, v, i) => a + v, 0);

  var t = input => {
    console.log(input, f(input));
  };

  t("1122");
  t("1111");
  t("1234");
  t("91212129");
};

var aoc_2017_1 = () => {

  var f = input => input.split("").map(s => parseInt(s, 10)).filter((e, i, a) => e == a[(i + 1) % a.length]).reduce((a, v, i) => a + v, 0);

  var t = input => {
    console.log(input, f(input));
  };

  t("1122");
  t("1111");
  t("1234");
  t("91212129");

  t
};

var test = (f, input) => {
  console.log(input, f(input));
};

var day_1_part_1 = input => input.split("").map(s => parseInt(s, 10)).filter((e, i, a) => e == a[(i + 1) % a.length]).reduce((a, v, i) => a + v, 0);

var day_1_part_2 = input => input.split("").map(s => parseInt(s, 10)).filter((e, i, a) => e == a[(i + a.length / 2) % a.length]).reduce((a, v, i) => a + v, 0);






5 1 9 5
7 5 3
2 4 6 8


var day_2_part_1 = input => input.split("\n").map(r => r.split(" ").map(s => parseInt(s, 10))).map(r => Math.max(...r) - Math.min(...r)).reduce((a,v,i) => a + v, 0);


input.split("\n").map(r => r.split(/\s+/).map(s => parseInt(s, 10)))

var day_2_part_1 = input => input.split("\n").map(r => r.split(/\s+/).map(s => parseInt(s, 10))).map(r => Math.max(...r) - Math.min(...r)).reduce((a,v,i) => a + v, 0);

t(day_2_part_1, `5 1 9 5
7 5 3
2 4 6 8`)

var day_2_part_2 = input => input.split("\n").map(r => r.split(/\s+/).map(s => parseInt(s, 10)).map(r => r.filter((e,i,a) => a.some((f,j,b) => i != j && Math.max(e,f) % Math.min(e,f) == 0)));


var day_2_part_2 = input => input.replace(/\n$/).split("\n").map(r => r.split(/\s+/).map(s => parseInt(s, 10)))
  .map(r => r.filter((e,i,a) => a.some((f,j,b) => i != j && Math.max(e,f) % Math.min(e,f) == 0)))
  .map(r => Math.max(...r) / Math.min(...r))
  .reduce((a,v,i) => a + v,0);

fetch("http://adventofcode.com/2017/day/2/input", { credentials: "include" }).then(response => response.text()).then(console.log)

test(day_2_part_2)



17  16  15  14  13
18   5   4   3  12
19   6   1   2  11
20   7   8   9  10
21  22  23---> ...

37  36* 35  34  33  32  31
38  17  16* 15  14  13  30
39  18   5   4*  3  12  29
40  19   6   1*  2  11  28
41  20   7   8   9* 10  27
42  21  22  23  24  25* 26
43  44  45  46  47  48  49*
